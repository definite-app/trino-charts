---
# Source: trino/templates/configmap-catalog.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-trino-catalog
  namespace: default
  labels:
    helm.sh/chart: trino-0.32.0
    app.kubernetes.io/name: trino
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "461"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: catalogs
data:
  tpcds.properties: |
    connector.name=tpcds
    tpcds.splits-per-node=4
    
  tpch.properties: |
    connector.name=tpch
    tpch.splits-per-node=4
---
# Source: trino/templates/configmap-coordinator.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-trino-coordinator
  namespace: default
  labels:
    helm.sh/chart: trino-0.32.0
    app.kubernetes.io/name: trino
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "461"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: coordinator
data:
  node.properties: |
    node.environment=production
    node.data-dir=/data/trino
    plugin.dir=/usr/lib/trino/plugin

  jvm.config: |
    -server
    -agentpath:/usr/lib/trino/bin/libjvmkill.so
    -Xmx12G
    -XX:+UseG1GC
    -XX:G1HeapRegionSize=32M
    -XX:+ExplicitGCInvokesConcurrent
    -XX:+HeapDumpOnOutOfMemoryError
    -XX:+ExitOnOutOfMemoryError
    -XX:-OmitStackTraceInFastThrow
    -XX:ReservedCodeCacheSize=512M
    -XX:PerMethodRecompilationCutoff=10000
    -XX:PerBytecodeRecompilationCutoff=10000
    -Djdk.attach.allowAttachSelf=true
    -Djdk.nio.maxCachedBufferSize=2000000
    # Allow loading dynamic agent used by JOL
    -XX:+EnableDynamicAgentLoading
  
    # https://bugs.openjdk.org/browse/JDK-8329528
    -XX:+UnlockDiagnosticVMOptions
    -XX:G1NumCollectionsKeepPinned=10000000

  config.properties: |
    coordinator=true
    node-scheduler.include-coordinator=false
    http-server.http.port=8080
    query.max-memory=20GB
    query.max-memory-per-node=10GB
    memory.heap-headroom-per-node=2GB
    discovery.uri=http://localhost:8080
    catalog.management=dynamic

  log.properties: |
    io.trino=INFO
---
# Source: trino/templates/configmap-coordinator.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-trino-schemas-volume-coordinator
  namespace: default
  labels:
    helm.sh/chart: trino-0.32.0
    app.kubernetes.io/name: trino
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "461"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: coordinator
data:
---
# Source: trino/templates/configmap-coordinator.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: catalog-store-config
  namespace: default
  labels:
    helm.sh/chart: trino-0.32.0
    app.kubernetes.io/name: trino
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "461"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: coordinator
data:
  catalog-store.properties: |
    catalog.config-dir=/data/trino
---
# Source: trino/templates/configmap-worker.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-trino-worker
  namespace: default
  labels:
    helm.sh/chart: trino-0.32.0
    app.kubernetes.io/name: trino
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "461"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: worker
data:
  node.properties: |
    node.environment=production
    node.data-dir=/data/trino
    plugin.dir=/usr/lib/trino/plugin

  jvm.config: |
    -server
    -agentpath:/usr/lib/trino/bin/libjvmkill.so
    -Xmx12G
    -XX:+UseG1GC
    -XX:G1HeapRegionSize=32M
    -XX:+ExplicitGCInvokesConcurrent
    -XX:+HeapDumpOnOutOfMemoryError
    -XX:+ExitOnOutOfMemoryError
    -XX:-OmitStackTraceInFastThrow
    -XX:ReservedCodeCacheSize=512M
    -XX:PerMethodRecompilationCutoff=10000
    -XX:PerBytecodeRecompilationCutoff=10000
    -Djdk.attach.allowAttachSelf=true
    -Djdk.nio.maxCachedBufferSize=2000000
    # Allow loading dynamic agent used by JOL
    -XX:+EnableDynamicAgentLoading
  
    # https://bugs.openjdk.org/browse/JDK-8329528
    -XX:+UnlockDiagnosticVMOptions
    -XX:G1NumCollectionsKeepPinned=10000000

  config.properties: |
    coordinator=false
    http-server.http.port=8080
    query.max-memory=20GB
    query.max-memory-per-node=10GB
    memory.heap-headroom-per-node=2GB
    discovery.uri=http://release-name-trino:8080
    catalog.management=dynamic

  log.properties: |
    io.trino=INFO
---
# Source: trino/templates/configmap-worker.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-trino-schemas-volume-worker
  namespace: default
  labels:
    helm.sh/chart: trino-0.32.0
    app.kubernetes.io/name: trino
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "461"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: worker
data:
---
# Source: trino/templates/storageclass.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: balanced-storage
provisioner: pd.csi.storage.gke.io
volumeBindingMode: WaitForFirstConsumer
allowVolumeExpansion: true
parameters:
  type: hyperdisk-balanced
  provisioned-throughput-on-create: "200Mi"
  provisioned-iops-on-create: "10000"
---
# Source: trino/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: trino-coordinator-data
  labels:
    helm.sh/chart: trino-0.32.0
    app.kubernetes.io/name: trino
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "461"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
  storageClassName: balanced-storage
# Remove the worker PVC creation from here, as it will be handled by the StatefulSet
---
# Source: trino/templates/service-coordinator.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-trino
  namespace: default
  labels:
    helm.sh/chart: trino-0.32.0
    app.kubernetes.io/name: trino
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "461"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: coordinator
  annotations:
    {}
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: trino
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: coordinator
---
# Source: trino/templates/service-worker.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-trino-worker
  namespace: default
  labels:
    helm.sh/chart: trino-0.32.0
    app.kubernetes.io/name: trino
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "461"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: worker
  annotations:
    {}
spec:
  clusterIP: None
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: trino
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: worker
---
# Source: trino/templates/deployment-coordinator.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-trino-coordinator
  namespace: default
  labels:
    helm.sh/chart: trino-0.32.0
    app.kubernetes.io/name: trino
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "461"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: coordinator
    trino.io/network-policy-protection: disabled
spec:
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: trino
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: coordinator
  template:
    metadata:
      annotations:
        checksum/catalog-config: 03418e20dad4af04cff79d242d99d59cc0d4fbce53672a6541158551675b30b9
        checksum/coordinator-config: 378d2edbbc16e0c7e7bb96fef6042371d4bdbaea158701ca88f1d00c30e477b4

      labels:
        helm.sh/chart: trino-0.32.0
        app.kubernetes.io/name: trino
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "461"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: coordinator
        trino.io/network-policy-protection: disabled
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsUser: 1000
      volumes:
        - name: config-volume
          configMap:
            name: release-name-trino-coordinator
        - name: catalog-store-volume
          configMap:
            name: catalog-store-config
        - name: catalog-volume
          configMap:
            name: release-name-trino-catalog
        - name: schemas-volume
          configMap:
            name: release-name-trino-schemas-volume-coordinator
        - name: data-volume
          persistentVolumeClaim:
            claimName: trino-coordinator-data
      terminationGracePeriodSeconds: 30
      containers:
        - name: trino-coordinator
          image: trinodb/trino:461
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            runAsGroup: 1000
            runAsUser: 1000
          env:
            []
          envFrom:
            []
          volumeMounts:
            - mountPath: /etc/trino
              name: config-volume
            - mountPath: /data/trino/etc/trino/catalog-store.properties
              name: catalog-store-volume
              subPath: catalog-store.properties
            #
            # - mountPath: /etc/trino/catalog
            #   name: catalog-volume
            #
            - mountPath: /etc/trino/schemas
              name: schemas-volume
            - mountPath: /data/trino
              name: data-volume
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /v1/info
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
          readinessProbe:
            exec:
              command: [/usr/lib/trino/bin/health-check]
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
          lifecycle:
            {}
          resources:
            requests:
              cpu: "1.5"
              memory: "10Gi"
            limits:
              cpu: "1.5"
              memory: "10Gi"
---
# Source: trino/templates/statefulset-worker.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-trino-worker
  namespace: default
  labels:
    helm.sh/chart: trino-0.32.0
    app.kubernetes.io/name: trino
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "461"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: worker
spec:
  serviceName: release-name-trino-worker
  replicas: 2
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: trino
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: worker
  template:
    metadata:
      labels:
        helm.sh/chart: trino-0.32.0
        app.kubernetes.io/name: trino
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "461"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: worker
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsUser: 1000
      containers:
        - name: trino-worker
          image: trinodb/trino:461
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            runAsGroup: 1000
            runAsUser: 1000
          env:
            []
          envFrom:
            []
          volumeMounts:
            - name: config-volume
              mountPath: /etc/trino
            - name: catalog-volume
              mountPath: /etc/trino/catalog
            - name: data
              mountPath: /data/trino
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /v1/info
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /v1/info
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            requests:
              cpu: "2"
              memory: "12Gi"
            limits:
              cpu: "2"
              memory: "12Gi"
      volumes:
        - name: config-volume
          configMap:
            name: release-name-trino-worker
        - name: catalog-volume
          configMap:
            name: release-name-trino-catalog
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: balanced-storage
      resources:
        requests:
          storage: 400Gi
---
# Source: trino/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: release-name-trino-test-connection
  labels:
    helm.sh/chart: trino-0.32.0
    app.kubernetes.io/name: trino
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "461"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: test
    test: connection
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: cli
      image: trinodb/trino:461
      command: ['trino']
      args:
      - trino://release-name-trino:8080
      - --user=admin
      - --debug
      - --execute=SELECT 1
      - --no-progress
  restartPolicy: Never
